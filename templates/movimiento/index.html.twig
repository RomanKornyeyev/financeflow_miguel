{% extends 'base.html.twig' %}
{% form_theme form 'bootstrap_5_layout.html.twig' %}

{% import 'partials/macros/_sort_links.html.twig' as sort %}
{% import 'partials/macros/_pagination_helper.html.twig' as paginador %}
{% import 'partials/macros/_empty_message.html.twig' as empty %}
{% import 'partials/macros/_filter_summary.html.twig' as resumen %}

{# DATA FOR CHART #}
{% set ingresosLabels = ingresosPorCategoria | map(c => c.categoria.value|replace({'_': ' '})|capitalize) %}
{% set ingresosValores = ingresosPorCategoria | map(c => c.total) %}
{% set gastosLabels = gastosPorCategoria | map(c => c.categoria.value|replace({'_': ' '})|capitalize) %}
{% set gastosValores = gastosPorCategoria | map(c => c.total) %}
{% set totalIngresos = ingresosValores|reduce((carry, item) => carry + item, 0) %}
{% set totalGastos = gastosValores|reduce((carry, item) => carry + item, 0) %}

{% block title %}Mis Movimientos{% endblock %}

{% block content %}
<div class="container mt-4">

    <h1 class="text-center mb-3">Mis Movimientos</h1>

    {# captura de los filtros aplicados por GET #}
    {% set filtros = app.request.query.all['movimiento_filter'] ?? {} %}

    {# h6 con los filtros aplicados #}
    {{ resumen.show(filtros) }}

    <script>
        const ingresosData = {
            labels: {{ ingresosLabels|json_encode|raw }},
            values: {{ ingresosValores|json_encode|raw }}
        };

        const gastosData = {
            labels: {{ gastosLabels|json_encode|raw }},
            values: {{ gastosValores|json_encode|raw }}
        };
    </script>
    <div class="row row-cols-1 row-cols-md-2 mb-4">
        <div class="col mb-3">
            <div class="card h-100">
                <div class="card-header text-center fw-bold">Ingresos por categoría</div>
                <div class="card-body">
                    <canvas id="graficoIngresos"></canvas>
                    <ul class="list-group list-group-flush small mt-2">
                        {% for i in 0..(ingresosLabels|length - 1) %}
                            {% set label = ingresosLabels[i] %}
                            {% set value = ingresosValores[i] %}
                            {% set porcentaje = totalIngresos > 0 ? (value / totalIngresos * 100) : 0 %}
                            <li class="list-group-item d-flex justify-content-between">
                                <span>{{ label }}</span>
                                <span>{{ value|number_format(2, ',', '.') }} € ({{ porcentaje|number_format(1, ',', '') }}%)</span>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>
        </div>
        <div class="col mb-3">
            <div class="card h-100">
                <div class="card-header text-center fw-bold">Ingresos por categoría</div>
                <div class="card-body">
                    <canvas id="graficoGastos"></canvas>
                    <ul class="list-group list-group-flush small mt-2">
                        {% for i in 0..(gastosLabels|length - 1) %}
                            {% set label = gastosLabels[i] %}
                            {% set value = gastosValores[i] %}
                            {% set porcentaje = totalGastos > 0 ? (value / totalGastos * 100) : 0 %}
                            <li class="list-group-item d-flex justify-content-between">
                                <span>{{ label }}</span>
                                <span>{{ value|number_format(2, ',', '.') }} € ({{ porcentaje|number_format(1, ',', '') }}%)</span>
                            </li>
                        {% endfor %}
                    </ul>
                </div>
            </div>
        </div>
    </div>
    

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const colores = [
            '#4caf50', '#2196f3', '#ff9800', '#e91e63',
            '#9c27b0', '#00bcd4', '#f44336', '#8bc34a',
        ];

        const crearGrafico = (ctxId, data, titulo) => {
            new Chart(document.getElementById(ctxId), {
                type: 'pie',
                data: {
                    labels: data.labels,
                    datasets: [{
                        data: data.values,
                        backgroundColor: colores,
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        title: {
                            display: true,
                            text: titulo,
                            padding: 10,
                            font: {
                                size: 18
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = parseFloat(context.raw) || 0;
                                    const data = context.chart.data.datasets[0].data.map(v => parseFloat(v) || 0);
                                    const total = data.reduce((a, b) => a + b, 0);

                                    const porcentaje = total > 0
                                        ? ((value / total) * 100).toFixed(1)
                                        : '0.0';

                                    return `${label}: ${value.toLocaleString('es-ES', {minimumFractionDigits: 2})} € (${porcentaje}%)`;
                                }
                            }
                        }
                    }
                }
            });
        };

        crearGrafico('graficoIngresos', ingresosData, 'INGRESOS');
        crearGrafico('graficoGastos', gastosData, 'GASTOS');
    </script>



    {% if totales %}
        <div class="row row-cols-1 row-cols-md-3">
            <div class="col mb-3">
                <div class="card">
                    <div class="card-body text-center bg-body-tertiary">
                        <strong>Total ingresos:</strong><br>
                        <span class="h4">{{ totales.ingresos|number_format(2, ',', '.') }}€</span>
                        
                    </div>
                </div>
            </div>
            <div class="col mb-3">
                <div class="card">
                    <div class="card-body text-center bg-body-tertiary">
                        <strong>Total gastos:</strong><br>
                        <span class="h4">{{ totales.gastos|number_format(2, ',', '.') }}€</span>
                        
                    </div>
                </div>
            </div>
            <div class="col mb-3">
                <div class="card">
                    <div class="card-body text-center bg-body-tertiary">
                        <strong>Balance:</strong><br>
                        <span class="h4 {{ totales.balance >= 0 ? 'text-success' : 'text-danger' }}">
                            {{ totales.balance|number_format(2, ',', '.') }} €
                        </div>
                    </div>
                </span>
            </div>
        </div>
    {% endif %}

    {# comprobamos si hay GET, para desplegar los filtros #}
    {% set tieneFiltros = 
        filtros['desde']|default('') is not empty or
        filtros['hasta']|default('') is not empty or
        filtros['tipoTransaccion']|default('') is not empty or
        filtros['categoria']|default('') is not empty or
        filtros['concepto']|default('') is not empty or
        filtros['descripcion']|default('') is not empty
    %}

    <p class="d-inline-flex gap-1">
        <button class="btn btn-outline-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFilters" aria-expanded="false" aria-controls="collapseFilters">
            <i class="fa-solid fa-magnifying-glass"></i> Filtros
        </button>
    </p>

    <div class="collapse {{ tieneFiltros ? 'show' : '' }}" id="collapseFilters">
        {{ form_start(form, { 'attr': { 'class': 'p-4 p-md-5 border rounded-3 bg-body-tertiary mb-3' } }) }}
            <div class="row">
                <div class="col-md-3">{{ form_row(form.importeMin) }}</div>
                <div class="col-md-3">{{ form_row(form.importeMax) }}</div>
                <div class="col-md-3">{{ form_row(form.tipoTransaccion) }}</div>
                <div class="col-md-3">{{ form_row(form.categoria) }}</div>
            </div>
            <div class="row">
                <div class="col-md-3">{{ form_row(form.desde) }}</div>
                <div class="col-md-3">{{ form_row(form.hasta) }}</div>
                <div class="col-md-6">{{ form_row(form.concepto) }}</div>
            </div>
            <div class="row">
                <div class="col-md-12">{{ form_row(form.descripcion) }}</div>
            </div>

            <div class="mt-2 d-flex justify-content-center align-items-center gap-3">
                <button type="submit" class="btn btn-primary px-5"><i class="fa-solid fa-magnifying-glass"></i> Filtrar</button>
                <a href="{{ path('movimiento_index') }}" class="btn btn-outline-primary"><i class="fa-solid fa-eraser"></i> Resetear filtros</a>
            </div>
        {{ form_end(form) }}
    </div>
    

    <div class="d-flex justify-content-between align-items-center flex-wrap">
        <a href="{{ path('movimiento_editar') }}" class="btn btn-primary mb-3"><i class="fa-solid fa-plus"></i> Nuevo Movimiento</a>

        {{ pagerfanta(pager, {
            proximity: 1,
            prev_message: 'Anterior',
            next_message: 'Siguiente'
        }) }}
    </div>

    {% if pager.nbResults == 0 %}
        {{ empty.show('No se encontraron resultados.', 'info') }}
    {% else %}
        <div class="table-responsive">
            <table class="table table-striped table-hover">

                {% set currentSort = app.request.get('sort') ?? '' %}
                {% set currentDir = app.request.get('dir') ?? 'desc' %}
                {% set currentQuery = app.request.query.all %}

                <thead>
                    <tr>
                        <th class="bg-dark-subtle">{{ sort.link('Fecha', 'fechaMovimiento', currentSort, currentDir, 'movimiento_index', currentQuery) }}</th>
                        <th class="bg-dark-subtle">{{ sort.link('Tipo', 'tipoTransaccion', currentSort, currentDir, 'movimiento_index', currentQuery) }}</th>
                        <th class="bg-dark-subtle">{{ sort.link('Categoría', 'categoria', currentSort, currentDir, 'movimiento_index', currentQuery) }}</th>
                        <th class="bg-dark-subtle">{{ sort.link('Concepto', 'concepto', currentSort, currentDir, 'movimiento_index', currentQuery) }}</th>
                        <th class="bg-dark-subtle">{{ sort.link('Importe', 'importe', currentSort, currentDir, 'movimiento_index', currentQuery) }}</th>
                        <th class="bg-dark-subtle">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    {% for movimiento in pager.currentPageResults %}
                        <tr>
                            <td>{{ movimiento.fechaMovimiento|date('d/m/Y') }}</td>
                            <td>{{ movimiento.tipoTransaccion.value|capitalize }}</td>
                            <td>{{ movimiento.categoria.value|replace({'_': ' '})|capitalize }}</td>
                            <td>{{ movimiento.concepto }}</td>
                            <td>
                                {% if movimiento.tipoTransaccion.value == 'gasto' %}
                                    -{{ movimiento.importe }} €
                                {% else %}
                                    +{{ movimiento.importe }} €
                                {% endif %}
                            </td>
                            <td>
                                <a href="{{ path('movimiento_editar', {id: movimiento.id}) }}" class="btn btn-sm btn-primary">Editar</a>
                                <form method="post" action="{{ path('movimiento_eliminar', {id: movimiento.id}) }}" style="display:inline-block;" onsubmit="return confirm('¿Seguro que quieres eliminar este movimiento?');">
                                    <input type="hidden" name="_token" value="{{ csrf_token('csrf_eliminar_movimiento' ~ movimiento.id) }}">
                                    <button class="btn btn-sm btn-danger">Eliminar</button>
                                </form>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        {# 📜 Sección de paginación #}
        <div class="navigation d-flex justify-content-center align-items-center mt-1 flex-column">
            {{ pagerfanta(pager, {
                proximity: 1,
                prev_message: 'Anterior',
                next_message: 'Siguiente',
            }) }}
            {{ paginador.summary(pager) }}
        </div>
        
    {% endif %}
</div>
{% endblock %}